# Fig. 2: Entanglement level spacing ratios in random observables and comparison to classical ensembles
include("../tools/imports.jl")

#Load data generated by evolution/evo.jl
function read_dat(fname)
    f = open("data/classical_vs_evo/$(fname)", read = true)
    s = read(f, String)
    close(f)
    [
        parse.(Float64, split(s, ",")) 
        for s in strip.(strip.(strip.(split(s, "[")[3:end]), ','),']')
    ]
end

dists_classical = [
    vcat(read_dat("unitary.dat")),
    vcat(read_dat("GUE.dat")),
    vcat(read_dat("GOE.dat"))
]

dists_evo = [
    vcat(read_dat("hermitian_evo.dat")),
    vcat(read_dat("real_evo.dat"))
]

## Make plot
xend = 3
xax = LinRange(0, xend, 100)

plot(xax, WD(2), color = seaborn[1], label = L"WD, $\beta = 2$")
plot!(xax, WD(1), color = seaborn[2], label = L"WD, $\beta = 1$")
plot!(xax, WD(0), label = L"\text{Surmise for GOE}", color = seaborn[3])

labels = ["Haar", "GUE", "GOE"]

for (i,dist) in enumerate(dists_classical)
    nbins = 60
    x = LinRange(0,xend,nbins)[1:end-1]
    spacdist = vcat(spacings.(dist)...)
    histplot = [sum(x[i-1] .<= spacdist .< x[i])*(nbins/xend)/length(spacdist) for i in 2:length(x)]
    scatter!(x[1:end-1] .+ xend/(2*nbins), histplot, markershape = :+, color = seaborn[i], label = labels[i], markersize = 7)
end

for (i,dist) in enumerate(dists_evo)
    nbins = 60
    x = LinRange(0,xend,nbins)[1:end-1]
    spacdist = vcat(spacings.(dist)...)
    histplot = [sum(x[i-1] .<= spacdist .< x[i])*(nbins/xend)/length(spacdist) for i in 2:length(x)]
    scatter!(x[1:end-1] .+ xend/(2*nbins), histplot, marker = :o, color = seaborn[i+1], label = labels[i], markerstrokewidth =0, markersize = 4)
end

xlabel!(L"r")
ylabel!(L"p(r)")
savefig("figures/fig2.svg")

#inset
xend = 2.2
plot(guidefontsize = 16, axeslabelfontsize = 16, tickfontsize = 16)
for (i,dist) in enumerate(dists_classical)
    nbins = 60
    x = LinRange(0,xend,nbins)[1:end-1]
    plot!(x .+ xend/(2*nbins), bin(vcat(dist...), 0, xend, nbins), palette = seaborn, linewidth = 5, label = "")
end

for (i,dist) in enumerate(dists_evo)
    nbins = 120
    x = LinRange(0,xend,nbins)[1:end-1]
    plot!(x .+ xend/(2*nbins), bin(vcat(dist...), 0, xend, nbins), palette = seaborn, linewidth = 5, label = "")
end

plot!(LinRange(0, 2, 100), x->1/Ï€*sqrt(4-x^2), color = :black, linestyle=:dash, linewidth = 3, label = "semicircle")

xlabel!(L"\sqrt{\lambda}")
ylabel!(L"p(\sqrt{\lambda})")
savefig("figures/fig2_inset.svg")